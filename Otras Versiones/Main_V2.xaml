<Activity mc:Ignorable="sap sap2010" x:Class="Main_V2" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1794,7043" sap2010:WorkflowViewState.IdRef="Main_V2_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1466,6978" sap2010:WorkflowViewState.IdRef="Sequence_12">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1424,6886" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="1388,6808" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Main_V2" sap:VirtualizedContainerService.HintSize="1346,6716" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1304,6624" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
              <ueab:ExcelProcessScopeX.Body>
                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1270,6538" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="str_dtPPack_W" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="1228,1484" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="PSDS\PSDS_List_9-19-2022 - 0225_hrs.xls">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="486,1218" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="dtPPack_Dimentions" />
                              <Variable x:TypeArguments="sd:DataTable" Name="dtLU_Dimentions" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;PSDS_List_9-19-2022 - 0225_hrs&quot;).Range(&quot;S:U&quot;)]" SaveTo="[dtPPack_Dimentions]" />
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;PSDS_List_9-19-2022 - 0225_hrs&quot;).Range(&quot;W:Y&quot;)]" SaveTo="[dtLU_Dimentions]" />
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(&quot;PSDS_List_9-19-2022 - 0225_hrs&quot;).Range(&quot;J:J&quot;)]" SaveTo="[dtNoPartes]" />
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[Excel.Sheet(&quot;PSDS_List_9-19-2022 - 0225_hrs&quot;).Range(&quot;Q:Q&quot;)]" SaveTo="[dtQtyPPack]" />
                            <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="444,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_5" Range="[Excel.Sheet(&quot;PSDS_List_9-19-2022 - 0225_hrs&quot;).Range(&quot;V:V&quot;)]" SaveTo="[dtQtyLU]" />
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="444,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[dtLU_Dimentions.Columns(2).ToString]" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                    </ueab:ExcelApplicationCard>
                    <Parallel sap:VirtualizedContainerService.HintSize="1228,2397" sap2010:WorkflowViewState.IdRef="Parallel_1">
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Este modulo se encarga decomprobar cada dato del DataTable en dtPPack_L y realiza las siguietes acciones:&#xA;&#xA;- Si la fila que esta analizando esta en Inches(&quot;Pulgadas&quot;), este eliminara el prefijo &quot;in&quot; y lo convierte en Double, luego lo convierte a milimetros(operacion por 25.4) y lo vuelve a guardar en el dtPPack_L&#xA;&#xA;- Si la fila que esta analizando esta en milimetros, elmina el prefijo &quot;mm&quot; y lo vuelve a guardar en el dtPPack_L" DataTable="[dtPPack_L]" DisplayName="For Each Row in dtPPack_L" sap:VirtualizedContainerService.HintSize="527,2351" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="493,2090" sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="bool_rowPPack_L" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage sap2010:Annotation.AnnotationText="Este Log Message lo utilizo para ver el dato con el cual esta a punto de trabajar.&#xA;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="451,148" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Valor a evaluar = &quot; + Row.ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:LogMessage>
                              <ui:IsMatch sap2010:Annotation.AnnotationText="Esta expresion la utilizo para validar si el dato tiene como prefjo &quot;In&quot; o &quot;mm&quot;:&#xA;&#xA;-Si el actual valor en &quot;Row(&quot;P-Pack L&quot;)&quot; contiene el prefijo &quot;In&quot;, asigna a la variable bool_rowPPack_L en &quot;True&quot;&#xA;&#xA;-Si el actual valor en &quot;Row(&quot;P-Pack L&quot;)&quot; contiene el prefijo &quot;mm&quot;, asigna a la variable bool_rowPPack_L en &quot;False&quot;" BuilderPattern=" in" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="451,221" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[Row(&quot;P-Pack L&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot; in&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern=" in" RegexOption="IgnoreCase, Compiled" Result="[bool_rowPPack_L]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:IsMatch>
                              <ui:IfElseIf sap2010:Annotation.AnnotationText="En esta condicion entran los valores en &quot;Row(&quot;P-Pack L&quot;)&quot; que contienen como prefijo &quot;in&quot;" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="451,1549" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                                <ui:IfElseIf.ConditionBlocks>
                                  <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                    <ui:IfElseIfBlock BlockType="If" Condition="[bool_rowPPack_L = True]">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,706" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="strRowPPack_L" />
                                            <Variable x:TypeArguments="x:Double" Name="doublePPack_L" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Replace sap2010:Annotation.AnnotationText="En este modulo remplazo el prefijo &quot;in&quot; por &quot;&quot; y el resultado lo asigno en la variable &quot;strRowPPack_L&quot;" BuilderPattern="in" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[Row(&quot;P-Pack L&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;in&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="in" RegexOption="IgnoreCase, Compiled" Result="[strRowPPack_L]">
                                            <ui:Replace.Replacement>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:Replace.Replacement>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Replace>
                                          <Assign sap2010:Annotation.AnnotationText="Aqui convierto el valor de la variable &quot;strRowPPack_L&quot; a tipo Double y lo asigno a la variable &quot;doublePPack_L&quot;" sap:VirtualizedContainerService.HintSize="334,117" sap2010:WorkflowViewState.IdRef="Assign_1">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">[doublePPack_L]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">[Double.Parse(strRowPPack_L)]</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <Assign sap2010:Annotation.AnnotationText="Aqui multiplico el valor de &quot;doublePPack_L&quot; por 25.4, con el objetivo de hacer la conversion a milimetros y el resultado lo remplazo en la fila en el DataTable" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="Assign_2">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[Row("P-Pack L")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[doublePPack_L * 25.4]</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <ui:LogMessage sap2010:Annotation.AnnotationText="Este Log Message lo utilizo para ver los valores que fueron recientemente convertidos." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[Row(&quot;P-Pack L&quot;).ToString]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                    <ui:IfElseIfBlock BlockType="Else">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence sap2010:Annotation.AnnotationText="Esta condicion se ejecuta cuando el valor de &quot;bool_rowPPack_L&quot; es igual a &quot;False&quot;" DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,576" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="strPPack_L_mm" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Replace sap2010:Annotation.AnnotationText="Aqui remplazo el prefijo &quot;mm&quot; de el actual valor en &quot;Row(&quot;P-Pack L&quot;)&quot; por &quot;&quot; y dicho valor lo guardo en la variable &quot;strPPack_L_mm&quot;" BuilderPattern="mm" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[Row(&quot;P-Pack L&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;mm&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="mm" RegexOption="IgnoreCase, Compiled" Result="[strPPack_L_mm]">
                                            <ui:Replace.Replacement>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:Replace.Replacement>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Replace>
                                          <Assign sap2010:Annotation.AnnotationText="En este modulo, remplazo el valor de  &quot;Row(&quot;P-Pack L&quot;)&quot; por el valor en la variable  &quot;strPPack_L_mm&quot;" sap:VirtualizedContainerService.HintSize="334,117" sap2010:WorkflowViewState.IdRef="Assign_3">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[Row("P-Pack L")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[strPPack_L_mm]</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <ui:LogMessage sap2010:Annotation.AnnotationText="Este Log Message lo utilizo para ver el resultado del valor final" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[Row(&quot;P-Pack L&quot;).ToString]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                  </sc:BindingList>
                                </ui:IfElseIf.ConditionBlocks>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:IfElseIf>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Este modulo se encarga decomprobar cada dato del DataTable en dtPPack_W y realiza las siguietes acciones:&#xA;&#xA;- Si la fila que esta analizando esta en Inches(&quot;Pulgadas&quot;), este eliminara el prefijo &quot;in&quot; y lo convierte en Double, luego lo convierte a milimetros(operacion por 25.4) y lo vuelve a guardar en el dtPPack_W&#xA;&#xA;- Si la fila que esta analizando esta en milimetros, elmina el prefijo &quot;mm&quot; y lo vuelve a guardar en el dtPPack_W" DataTable="[dtPPack_W]" DisplayName="For Each Row in dtPPack_W" sap:VirtualizedContainerService.HintSize="527,2351" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="493,2090" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="bool_rowPPack_W" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage sap2010:Annotation.AnnotationText="Este Log Message lo utilizo para ver el dato con el cual esta a punto de trabajar.&#xA;" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="451,148" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Valor a evaluar = &quot; + Row(&quot;P-Pack W&quot;).ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:LogMessage>
                              <ui:IsMatch sap2010:Annotation.AnnotationText="Esta expresion la utilizo para validar si el dato tiene como prefjo &quot;In&quot; o &quot;mm&quot;:&#xA;&#xA;-Si el actual valor en &quot;Row(&quot;P-Pack W&quot;)&quot; contiene el prefijo &quot;In&quot;, asigna a la variable bool_rowPPack_W en &quot;True&quot;&#xA;&#xA;-Si el actual valor en &quot;Row(&quot;P-Pack W&quot;)&quot; contiene el prefijo &quot;mm&quot;, asigna a la variable bool_rowPPack_W en &quot;False&quot;" BuilderPattern=" in" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="451,221" sap2010:WorkflowViewState.IdRef="IsMatch_2" Input="[Row(&quot;P-Pack W&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot; in&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern=" in" RegexOption="IgnoreCase, Compiled" Result="[bool_rowPPack_W]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:IsMatch>
                              <ui:IfElseIf sap2010:Annotation.AnnotationText="En esta condicion entran los valores en &quot;Row(&quot;P-Pack W&quot;)&quot; que contienen como prefijo &quot;in&quot;" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="451,1549" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
                                <ui:IfElseIf.ConditionBlocks>
                                  <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                    <ui:IfElseIfBlock BlockType="If" Condition="[bool_rowPPack_W = True]">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,706" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="strRowPPack_W" />
                                            <Variable x:TypeArguments="x:Double" Name="doublePPack_W" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Replace sap2010:Annotation.AnnotationText="En este modulo remplazo el prefijo &quot;in&quot; por &quot;&quot; y el resultado lo asigno en la variable &quot;strRowPPack_W&quot;" BuilderPattern="in" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="Replace_3" Input="[Row(&quot;P-Pack W&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;in&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="in" RegexOption="IgnoreCase, Compiled" Result="[strRowPPack_W]">
                                            <ui:Replace.Replacement>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:Replace.Replacement>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Replace>
                                          <Assign sap2010:Annotation.AnnotationText="Aqui convierto el valor de la variable &quot;strRowPPack_W&quot; a tipo Double y lo asigno a la variable &quot;doublePPack_W&quot;" sap:VirtualizedContainerService.HintSize="334,117" sap2010:WorkflowViewState.IdRef="Assign_4">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Double">[doublePPack_W]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Double">[Double.Parse(strRowPPack_W)]</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <Assign sap2010:Annotation.AnnotationText="Aqui multiplico el valor de &quot;doublePPack_W&quot; por 25.4, con el objetivo de hacer la conversion a milimetros y el resultado lo remplazo en la fila en el DataTable" sap:VirtualizedContainerService.HintSize="334,147" sap2010:WorkflowViewState.IdRef="Assign_5">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[Row("P-Pack W")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[doublePPack_W * 25.4]</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <ui:LogMessage sap2010:Annotation.AnnotationText="Este Log Message lo utilizo para ver los valores que fueron recientemente convertidos." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[Row(&quot;P-Pack W&quot;).ToString]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                    <ui:IfElseIfBlock BlockType="Else">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence sap2010:Annotation.AnnotationText="Esta condicion se ejecuta cuando el valor de &quot;bool_rowPPack_W&quot; es igual a &quot;False&quot;" DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,576" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="strPPack_W_mm" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Replace sap2010:Annotation.AnnotationText="Aqui remplazo el prefijo &quot;mm&quot; de el actual valor en &quot;Row(&quot;P-Pack W&quot;)&quot; por &quot;&quot; y dicho valor lo guardo en la variable &quot;strPPack_W_mm&quot;" BuilderPattern="mm" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="Replace_4" Input="[Row(&quot;P-Pack W&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;mm&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="mm" RegexOption="IgnoreCase, Compiled" Result="[strPPack_W_mm]">
                                            <ui:Replace.Replacement>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:Replace.Replacement>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Replace>
                                          <Assign sap2010:Annotation.AnnotationText="En este modulo, remplazo el valor de  &quot;Row(&quot;P-Pack W&quot;)&quot; por el valor en la variable  &quot;strPPack_W_mm&quot;" sap:VirtualizedContainerService.HintSize="334,117" sap2010:WorkflowViewState.IdRef="Assign_6">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[Row("P-Pack W")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[strPPack_W_mm]</InArgument>
                                            </Assign.Value>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Assign>
                                          <ui:LogMessage sap2010:Annotation.AnnotationText="Este Log Message lo utilizo para ver el resultado del valor final" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[Row(&quot;P-Pack W&quot;).ToString]">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:LogMessage>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                  </sc:BindingList>
                                </ui:IfElseIf.ConditionBlocks>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:IfElseIf>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                    </Parallel>
                    <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="1228,2485" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" WorkbookPath="C:\Users\uif41718\Documents\UiPath\Sistema consultor de dimensiones\PSDS\PSDS.xls">
                      <ueab:ExcelApplicationCard.Body>
                        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,2219" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:WriteRangeX Append="True" Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;B3&quot;)]" DisplayName="Write DataTable to Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[dtNoPartes]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;C3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[dtQtyPPack]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;D3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_3" IgnoreEmptySource="False" Source="[dtQtyLU]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;G3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_4" IgnoreEmptySource="False" Source="[dtNoPartes]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;H3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_5" IgnoreEmptySource="False" Source="[dtPPack_L]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;I3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_6" IgnoreEmptySource="False" Source="[dtPPack_W]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;J3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_7" IgnoreEmptySource="False" Source="[dtPPack_H]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;L3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_8" IgnoreEmptySource="False" Source="[dtNoPartes]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;M3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_9" IgnoreEmptySource="False" Source="[dtLU_L]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;N3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_10" IgnoreEmptySource="False" Source="[dtLU_W]" />
                            <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;O3&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_11" IgnoreEmptySource="False" Source="[dtLU_H]" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelApplicationCard.Body>
                    </ueab:ExcelApplicationCard>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelProcessScopeX.Body>
            </ueab:ExcelProcessScopeX>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
  </Sequence>
</Activity>